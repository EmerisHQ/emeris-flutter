name: Main Branch
'on':
  push:
    branches:
      - main
  workflow_dispatch: null

concurrency:
  group: '${{ github.head_ref || github.ref }}-main'
  cancel-in-progress: true

env:
  ALPHA_ANDROID_FIREBASE_TESTERS_GROUP: android-testers
  ANDROID_FIREBASE_APP_ID: ${{ secrets.ANDROID_FIREBASE_APP_ID }}
  JAVA_VERSION: '12'
  RUBY_VERSION: '2.7'
  LC_ALL: en_US.UTF-8
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
  LANG: en_US.UTF-8

jobs:
  generate-coverage:
    timeout-minutes: 10
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: kuhnroyal/flutter-fvm-config-action@v1

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: pub get
        run: flutter pub get

      - name: generate coverage index file
        run: make generate_coverage_index_file

      - name: generate code coverage
        timeout-minutes: 4
        run: flutter test --dart-define=IS_CI=true --coverage --coverage-path=coverage/main.lcov.info

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: coverage/main.lcov.info
          commit_message: update coverage [skip-ci]

  deploy-android:
    needs: generate-coverage
    timeout-minutes: 30
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - uses: kuhnroyal/flutter-fvm-config-action@v1

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: pub get
        run: flutter pub get

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: prepare fastlane
        working-directory: ./android
        run: |
          gem install bundler
          bundle install

      - name: prepare android build with cosmos testnet
        run: >
          flutter build apk --build-number $GITHUB_RUN_NUMBER
          --profile
          --dart-define=LCD_URL=https://api.testnet.cosmos.network
          --dart-define=LCD_PORT=443
          --dart-define=GRPC_URL=https://grpc.testnet.cosmos.network
          --dart-define=GRPC_PORT=443

      - name: deploy firebase Android
        working-directory: ./android
        run: |
          gem install bundler
          bundle install
          bundle exec fastlane deploy_firebase

      - name: Report Status
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_NOTIFICATIONS_CHANNEL }}
          SLACK_COLOR: '${{ job.status }}'
          SLACK_ICON: 'https://github.com/tendermint.png?size=48'
          SLACK_TITLE: Emeris Android - DEPLOY FAILED
          SLACK_LINK_NAMES: true
          SLACK_USERNAME: Github Android Deployment
          MSG_MINIMAL: 'actions url, ref'
          SLACK_FOOTER: Mobile Slackbot
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  deploy-ios:
    needs: generate-coverage
    timeout-minutes: 30
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - uses: kuhnroyal/flutter-fvm-config-action@v1

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: pub get
        working-directory: ./ios
        run: flutter pub get

      - name: set up ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: prepare fastlane
        working-directory: ./ios
        run: |
          gem install bundler
          bundle install
          bundle exec fastlane prepare_certificates

      - name: prepare ios build with cosmos testnet
        run: |
          flutter build ipa --profile --build-number $GITHUB_RUN_NUMBER --dart-define=LCD_URL=https://api.testnet.cosmos.network --dart-define=LCD_PORT=443 --dart-define=GRPC_URL=https://grpc.testnet.cosmos.network --dart-define=GRPC_PORT=443

      - name: deploy firebase iOS
        working-directory: ./ios
        run: |
          bundle exec fastlane deploy_firebase


      - name: Report Status
        id: slack
        if: failure()
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "Emeris iOS - DEPLOY FAILED\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
